# Makefile.in generated by automake 1.8.5 from Makefile.am.
# src/elements/GL/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





SOURCES = $(glelements_lst_SOURCES) $(EXTRA_glelements_lst_SOURCES) $(libglelements_la_SOURCES) $(EXTRA_libglelements_la_SOURCES) $(libglelementsLINKHACK_la_SOURCES) $(EXTRA_libglelementsLINKHACK_la_SOURCES)

srcdir = ../../../../../graspitmodified_lm/Coin-3.1.3/src/elements/GL
top_srcdir = ../../../../../graspitmodified_lm/Coin-3.1.3
VPATH = ../../../../../graspitmodified_lm/Coin-3.1.3/src/elements/GL
pkgdatadir = $(datadir)/Coin
pkglibdir = $(libdir)/Coin
pkgincludedir = $(includedir)/Coin
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = src/elements/GL
DIST_COMMON = $(libglelementsinc_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../simacros/bin/../cfg/m4/bz2.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_debug.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_exceptions.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_functionname.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_profiling.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_rtti.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_symbols.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compile_warnings.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/compiler_capabilities.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/configuration_summary.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/cpp_search_order.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/dates.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/dl.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/doxygen_detection.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/errors.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/exit.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/fontconfig.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/freetype.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/gendsp.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/general.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/mac.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/macro_quoting.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/mathlib.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/misc_compiler.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/nprintf.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/openal.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/opengl.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/packagemaker.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/project.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/pthread.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/sim.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/simage.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/sourcedir.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/spidermonkey.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/uniqify_option_list.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/w32api.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/wrapmsvc.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/x11.m4 \
	$(top_srcdir)/../simacros/bin/../cfg/m4/zlib.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/cfg/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/discard.h \
	$(top_builddir)/src/config.h $(top_builddir)/src/setup.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
glelements_lst_AR = $(AR) $(ARFLAGS)
glelements_lst_LIBADD =
am__glelements_lst_SOURCES_DIST = SoGLCacheContextElement.cpp \
	SoGLClipPlaneElement.cpp SoGLColorIndexElement.cpp \
	SoGLCoordinateElement.cpp SoGLDepthBufferElement.cpp \
	SoGLDrawStyleElement.cpp SoGLEnvironmentElement.cpp \
	SoGLLazyElement.cpp SoGLLightIdElement.cpp \
	SoGLLinePatternElement.cpp SoGLLineWidthElement.cpp \
	SoGLModelMatrixElement.cpp \
	SoGLMultiTextureCoordinateElement.cpp \
	SoGLMultiTextureEnabledElement.cpp \
	SoGLMultiTextureMatrixElement.cpp \
	SoGLMultiTextureImageElement.cpp SoGLNormalElement.cpp \
	SoGLPointSizeElement.cpp SoGLPolygonOffsetElement.cpp \
	SoGLProjectionMatrixElement.cpp SoGLRenderPassElement.cpp \
	SoGLShapeHintsElement.cpp SoGLTextureCoordinateElement.cpp \
	SoGLTextureEnabledElement.cpp SoGLTexture3EnabledElement.cpp \
	SoGLTextureImageElement.cpp SoGLTextureMatrixElement.cpp \
	SoGLUpdateAreaElement.cpp SoGLVBOElement.cpp \
	SoGLViewingMatrixElement.cpp SoGLViewportRegionElement.cpp \
	SoGLDisplayList.cpp SoGLVertexAttributeElement.cpp \
	SoResetMatrixElement.cpp all-glelements-cpp.cpp
am__objects_1 = SoGLCacheContextElement.$(OBJEXT) \
	SoGLClipPlaneElement.$(OBJEXT) SoGLColorIndexElement.$(OBJEXT) \
	SoGLCoordinateElement.$(OBJEXT) \
	SoGLDepthBufferElement.$(OBJEXT) \
	SoGLDrawStyleElement.$(OBJEXT) \
	SoGLEnvironmentElement.$(OBJEXT) SoGLLazyElement.$(OBJEXT) \
	SoGLLightIdElement.$(OBJEXT) SoGLLinePatternElement.$(OBJEXT) \
	SoGLLineWidthElement.$(OBJEXT) \
	SoGLModelMatrixElement.$(OBJEXT) \
	SoGLMultiTextureCoordinateElement.$(OBJEXT) \
	SoGLMultiTextureEnabledElement.$(OBJEXT) \
	SoGLMultiTextureMatrixElement.$(OBJEXT) \
	SoGLMultiTextureImageElement.$(OBJEXT) \
	SoGLNormalElement.$(OBJEXT) SoGLPointSizeElement.$(OBJEXT) \
	SoGLPolygonOffsetElement.$(OBJEXT) \
	SoGLProjectionMatrixElement.$(OBJEXT) \
	SoGLRenderPassElement.$(OBJEXT) \
	SoGLShapeHintsElement.$(OBJEXT) \
	SoGLTextureCoordinateElement.$(OBJEXT) \
	SoGLTextureEnabledElement.$(OBJEXT) \
	SoGLTexture3EnabledElement.$(OBJEXT) \
	SoGLTextureImageElement.$(OBJEXT) \
	SoGLTextureMatrixElement.$(OBJEXT) \
	SoGLUpdateAreaElement.$(OBJEXT) SoGLVBOElement.$(OBJEXT) \
	SoGLViewingMatrixElement.$(OBJEXT) \
	SoGLViewportRegionElement.$(OBJEXT) SoGLDisplayList.$(OBJEXT) \
	SoGLVertexAttributeElement.$(OBJEXT) \
	SoResetMatrixElement.$(OBJEXT)
am__objects_2 = all-glelements-cpp.$(OBJEXT)
am__objects_3 = $(am__objects_1)
#am__objects_3 = $(am__objects_2)
am_glelements_lst_OBJECTS = $(am__objects_3)
am__EXTRA_glelements_lst_SOURCES_DIST = SoResetMatrixElement.h \
	all-glelements-cpp.cpp SoGLCacheContextElement.cpp \
	SoGLClipPlaneElement.cpp SoGLColorIndexElement.cpp \
	SoGLCoordinateElement.cpp SoGLDepthBufferElement.cpp \
	SoGLDrawStyleElement.cpp SoGLEnvironmentElement.cpp \
	SoGLLazyElement.cpp SoGLLightIdElement.cpp \
	SoGLLinePatternElement.cpp SoGLLineWidthElement.cpp \
	SoGLModelMatrixElement.cpp \
	SoGLMultiTextureCoordinateElement.cpp \
	SoGLMultiTextureEnabledElement.cpp \
	SoGLMultiTextureMatrixElement.cpp \
	SoGLMultiTextureImageElement.cpp SoGLNormalElement.cpp \
	SoGLPointSizeElement.cpp SoGLPolygonOffsetElement.cpp \
	SoGLProjectionMatrixElement.cpp SoGLRenderPassElement.cpp \
	SoGLShapeHintsElement.cpp SoGLTextureCoordinateElement.cpp \
	SoGLTextureEnabledElement.cpp SoGLTexture3EnabledElement.cpp \
	SoGLTextureImageElement.cpp SoGLTextureMatrixElement.cpp \
	SoGLUpdateAreaElement.cpp SoGLVBOElement.cpp \
	SoGLViewingMatrixElement.cpp SoGLViewportRegionElement.cpp \
	SoGLDisplayList.cpp SoGLVertexAttributeElement.cpp \
	SoResetMatrixElement.cpp
glelements_lst_OBJECTS = $(am_glelements_lst_OBJECTS)
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libglelementsincdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libglelements_la_LIBADD =
am__libglelements_la_SOURCES_DIST = SoGLCacheContextElement.cpp \
	SoGLClipPlaneElement.cpp SoGLColorIndexElement.cpp \
	SoGLCoordinateElement.cpp SoGLDepthBufferElement.cpp \
	SoGLDrawStyleElement.cpp SoGLEnvironmentElement.cpp \
	SoGLLazyElement.cpp SoGLLightIdElement.cpp \
	SoGLLinePatternElement.cpp SoGLLineWidthElement.cpp \
	SoGLModelMatrixElement.cpp \
	SoGLMultiTextureCoordinateElement.cpp \
	SoGLMultiTextureEnabledElement.cpp \
	SoGLMultiTextureMatrixElement.cpp \
	SoGLMultiTextureImageElement.cpp SoGLNormalElement.cpp \
	SoGLPointSizeElement.cpp SoGLPolygonOffsetElement.cpp \
	SoGLProjectionMatrixElement.cpp SoGLRenderPassElement.cpp \
	SoGLShapeHintsElement.cpp SoGLTextureCoordinateElement.cpp \
	SoGLTextureEnabledElement.cpp SoGLTexture3EnabledElement.cpp \
	SoGLTextureImageElement.cpp SoGLTextureMatrixElement.cpp \
	SoGLUpdateAreaElement.cpp SoGLVBOElement.cpp \
	SoGLViewingMatrixElement.cpp SoGLViewportRegionElement.cpp \
	SoGLDisplayList.cpp SoGLVertexAttributeElement.cpp \
	SoResetMatrixElement.cpp all-glelements-cpp.cpp
am__objects_6 = SoGLCacheContextElement.lo SoGLClipPlaneElement.lo \
	SoGLColorIndexElement.lo SoGLCoordinateElement.lo \
	SoGLDepthBufferElement.lo SoGLDrawStyleElement.lo \
	SoGLEnvironmentElement.lo SoGLLazyElement.lo \
	SoGLLightIdElement.lo SoGLLinePatternElement.lo \
	SoGLLineWidthElement.lo SoGLModelMatrixElement.lo \
	SoGLMultiTextureCoordinateElement.lo \
	SoGLMultiTextureEnabledElement.lo \
	SoGLMultiTextureMatrixElement.lo \
	SoGLMultiTextureImageElement.lo SoGLNormalElement.lo \
	SoGLPointSizeElement.lo SoGLPolygonOffsetElement.lo \
	SoGLProjectionMatrixElement.lo SoGLRenderPassElement.lo \
	SoGLShapeHintsElement.lo SoGLTextureCoordinateElement.lo \
	SoGLTextureEnabledElement.lo SoGLTexture3EnabledElement.lo \
	SoGLTextureImageElement.lo SoGLTextureMatrixElement.lo \
	SoGLUpdateAreaElement.lo SoGLVBOElement.lo \
	SoGLViewingMatrixElement.lo SoGLViewportRegionElement.lo \
	SoGLDisplayList.lo SoGLVertexAttributeElement.lo \
	SoResetMatrixElement.lo
am__objects_7 = all-glelements-cpp.lo
am__objects_8 = $(am__objects_6)
#am__objects_8 = $(am__objects_7)
am_libglelements_la_OBJECTS = $(am__objects_8)
am__EXTRA_libglelements_la_SOURCES_DIST = SoResetMatrixElement.h \
	all-glelements-cpp.cpp SoGLCacheContextElement.cpp \
	SoGLClipPlaneElement.cpp SoGLColorIndexElement.cpp \
	SoGLCoordinateElement.cpp SoGLDepthBufferElement.cpp \
	SoGLDrawStyleElement.cpp SoGLEnvironmentElement.cpp \
	SoGLLazyElement.cpp SoGLLightIdElement.cpp \
	SoGLLinePatternElement.cpp SoGLLineWidthElement.cpp \
	SoGLModelMatrixElement.cpp \
	SoGLMultiTextureCoordinateElement.cpp \
	SoGLMultiTextureEnabledElement.cpp \
	SoGLMultiTextureMatrixElement.cpp \
	SoGLMultiTextureImageElement.cpp SoGLNormalElement.cpp \
	SoGLPointSizeElement.cpp SoGLPolygonOffsetElement.cpp \
	SoGLProjectionMatrixElement.cpp SoGLRenderPassElement.cpp \
	SoGLShapeHintsElement.cpp SoGLTextureCoordinateElement.cpp \
	SoGLTextureEnabledElement.cpp SoGLTexture3EnabledElement.cpp \
	SoGLTextureImageElement.cpp SoGLTextureMatrixElement.cpp \
	SoGLUpdateAreaElement.cpp SoGLVBOElement.cpp \
	SoGLViewingMatrixElement.cpp SoGLViewportRegionElement.cpp \
	SoGLDisplayList.cpp SoGLVertexAttributeElement.cpp \
	SoResetMatrixElement.cpp
libglelements_la_OBJECTS = $(am_libglelements_la_OBJECTS)
libglelementsLINKHACK_la_LIBADD =
am__libglelementsLINKHACK_la_SOURCES_DIST =  \
	SoGLCacheContextElement.cpp SoGLClipPlaneElement.cpp \
	SoGLColorIndexElement.cpp SoGLCoordinateElement.cpp \
	SoGLDepthBufferElement.cpp SoGLDrawStyleElement.cpp \
	SoGLEnvironmentElement.cpp SoGLLazyElement.cpp \
	SoGLLightIdElement.cpp SoGLLinePatternElement.cpp \
	SoGLLineWidthElement.cpp SoGLModelMatrixElement.cpp \
	SoGLMultiTextureCoordinateElement.cpp \
	SoGLMultiTextureEnabledElement.cpp \
	SoGLMultiTextureMatrixElement.cpp \
	SoGLMultiTextureImageElement.cpp SoGLNormalElement.cpp \
	SoGLPointSizeElement.cpp SoGLPolygonOffsetElement.cpp \
	SoGLProjectionMatrixElement.cpp SoGLRenderPassElement.cpp \
	SoGLShapeHintsElement.cpp SoGLTextureCoordinateElement.cpp \
	SoGLTextureEnabledElement.cpp SoGLTexture3EnabledElement.cpp \
	SoGLTextureImageElement.cpp SoGLTextureMatrixElement.cpp \
	SoGLUpdateAreaElement.cpp SoGLVBOElement.cpp \
	SoGLViewingMatrixElement.cpp SoGLViewportRegionElement.cpp \
	SoGLDisplayList.cpp SoGLVertexAttributeElement.cpp \
	SoResetMatrixElement.cpp all-glelements-cpp.cpp
am_libglelementsLINKHACK_la_OBJECTS = $(am__objects_8)
am__EXTRA_libglelementsLINKHACK_la_SOURCES_DIST =  \
	SoResetMatrixElement.h all-glelements-cpp.cpp \
	SoGLCacheContextElement.cpp SoGLClipPlaneElement.cpp \
	SoGLColorIndexElement.cpp SoGLCoordinateElement.cpp \
	SoGLDepthBufferElement.cpp SoGLDrawStyleElement.cpp \
	SoGLEnvironmentElement.cpp SoGLLazyElement.cpp \
	SoGLLightIdElement.cpp SoGLLinePatternElement.cpp \
	SoGLLineWidthElement.cpp SoGLModelMatrixElement.cpp \
	SoGLMultiTextureCoordinateElement.cpp \
	SoGLMultiTextureEnabledElement.cpp \
	SoGLMultiTextureMatrixElement.cpp \
	SoGLMultiTextureImageElement.cpp SoGLNormalElement.cpp \
	SoGLPointSizeElement.cpp SoGLPolygonOffsetElement.cpp \
	SoGLProjectionMatrixElement.cpp SoGLRenderPassElement.cpp \
	SoGLShapeHintsElement.cpp SoGLTextureCoordinateElement.cpp \
	SoGLTextureEnabledElement.cpp SoGLTexture3EnabledElement.cpp \
	SoGLTextureImageElement.cpp SoGLTextureMatrixElement.cpp \
	SoGLUpdateAreaElement.cpp SoGLVBOElement.cpp \
	SoGLViewingMatrixElement.cpp SoGLViewportRegionElement.cpp \
	SoGLDisplayList.cpp SoGLVertexAttributeElement.cpp \
	SoResetMatrixElement.cpp
libglelementsLINKHACK_la_OBJECTS =  \
	$(am_libglelementsLINKHACK_la_OBJECTS)
depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/SoGLCacheContextElement.Plo \
	./$(DEPDIR)/SoGLCacheContextElement.Po \
	./$(DEPDIR)/SoGLClipPlaneElement.Plo \
	./$(DEPDIR)/SoGLClipPlaneElement.Po \
	./$(DEPDIR)/SoGLColorIndexElement.Plo \
	./$(DEPDIR)/SoGLColorIndexElement.Po \
	./$(DEPDIR)/SoGLCoordinateElement.Plo \
	./$(DEPDIR)/SoGLCoordinateElement.Po \
	./$(DEPDIR)/SoGLDepthBufferElement.Plo \
	./$(DEPDIR)/SoGLDepthBufferElement.Po \
	./$(DEPDIR)/SoGLDisplayList.Plo \
	./$(DEPDIR)/SoGLDisplayList.Po \
	./$(DEPDIR)/SoGLDrawStyleElement.Plo \
	./$(DEPDIR)/SoGLDrawStyleElement.Po \
	./$(DEPDIR)/SoGLEnvironmentElement.Plo \
	./$(DEPDIR)/SoGLEnvironmentElement.Po \
	./$(DEPDIR)/SoGLLazyElement.Plo \
	./$(DEPDIR)/SoGLLazyElement.Po \
	./$(DEPDIR)/SoGLLightIdElement.Plo \
	./$(DEPDIR)/SoGLLightIdElement.Po \
	./$(DEPDIR)/SoGLLinePatternElement.Plo \
	./$(DEPDIR)/SoGLLinePatternElement.Po \
	./$(DEPDIR)/SoGLLineWidthElement.Plo \
	./$(DEPDIR)/SoGLLineWidthElement.Po \
	./$(DEPDIR)/SoGLModelMatrixElement.Plo \
	./$(DEPDIR)/SoGLModelMatrixElement.Po \
	./$(DEPDIR)/SoGLMultiTextureCoordinateElement.Plo \
	./$(DEPDIR)/SoGLMultiTextureCoordinateElement.Po \
	./$(DEPDIR)/SoGLMultiTextureEnabledElement.Plo \
	./$(DEPDIR)/SoGLMultiTextureEnabledElement.Po \
	./$(DEPDIR)/SoGLMultiTextureImageElement.Plo \
	./$(DEPDIR)/SoGLMultiTextureImageElement.Po \
	./$(DEPDIR)/SoGLMultiTextureMatrixElement.Plo \
	./$(DEPDIR)/SoGLMultiTextureMatrixElement.Po \
	./$(DEPDIR)/SoGLNormalElement.Plo \
	./$(DEPDIR)/SoGLNormalElement.Po \
	./$(DEPDIR)/SoGLPointSizeElement.Plo \
	./$(DEPDIR)/SoGLPointSizeElement.Po \
	./$(DEPDIR)/SoGLPolygonOffsetElement.Plo \
	./$(DEPDIR)/SoGLPolygonOffsetElement.Po \
	./$(DEPDIR)/SoGLProjectionMatrixElement.Plo \
	./$(DEPDIR)/SoGLProjectionMatrixElement.Po \
	./$(DEPDIR)/SoGLRenderPassElement.Plo \
	./$(DEPDIR)/SoGLRenderPassElement.Po \
	./$(DEPDIR)/SoGLShapeHintsElement.Plo \
	./$(DEPDIR)/SoGLShapeHintsElement.Po \
	./$(DEPDIR)/SoGLTexture3EnabledElement.Plo \
	./$(DEPDIR)/SoGLTexture3EnabledElement.Po \
	./$(DEPDIR)/SoGLTextureCoordinateElement.Plo \
	./$(DEPDIR)/SoGLTextureCoordinateElement.Po \
	./$(DEPDIR)/SoGLTextureEnabledElement.Plo \
	./$(DEPDIR)/SoGLTextureEnabledElement.Po \
	./$(DEPDIR)/SoGLTextureImageElement.Plo \
	./$(DEPDIR)/SoGLTextureImageElement.Po \
	./$(DEPDIR)/SoGLTextureMatrixElement.Plo \
	./$(DEPDIR)/SoGLTextureMatrixElement.Po \
	./$(DEPDIR)/SoGLUpdateAreaElement.Plo \
	./$(DEPDIR)/SoGLUpdateAreaElement.Po \
	./$(DEPDIR)/SoGLVBOElement.Plo \
	./$(DEPDIR)/SoGLVBOElement.Po \
	./$(DEPDIR)/SoGLVertexAttributeElement.Plo \
	./$(DEPDIR)/SoGLVertexAttributeElement.Po \
	./$(DEPDIR)/SoGLViewingMatrixElement.Plo \
	./$(DEPDIR)/SoGLViewingMatrixElement.Po \
	./$(DEPDIR)/SoGLViewportRegionElement.Plo \
	./$(DEPDIR)/SoGLViewportRegionElement.Po \
	./$(DEPDIR)/SoResetMatrixElement.Plo \
	./$(DEPDIR)/SoResetMatrixElement.Po \
	./$(DEPDIR)/all-glelements-cpp.Plo \
	./$(DEPDIR)/all-glelements-cpp.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(glelements_lst_SOURCES) $(EXTRA_glelements_lst_SOURCES) \
	$(libglelements_la_SOURCES) $(EXTRA_libglelements_la_SOURCES) \
	$(libglelementsLINKHACK_la_SOURCES) \
	$(EXTRA_libglelementsLINKHACK_la_SOURCES)
DIST_SOURCES = $(am__glelements_lst_SOURCES_DIST) \
	$(am__EXTRA_glelements_lst_SOURCES_DIST) \
	$(am__libglelements_la_SOURCES_DIST) \
	$(am__EXTRA_libglelements_la_SOURCES_DIST) \
	$(am__libglelementsLINKHACK_la_SOURCES_DIST) \
	$(am__EXTRA_libglelementsLINKHACK_la_SOURCES_DIST)
libglelementsincHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libglelementsinc_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified_lm/Coin-3.1.3/cfg/missing --run aclocal-1.8
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified_lm/Coin-3.1.3/cfg/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified_lm/Coin-3.1.3/cfg/missing --run autoconf
AUTOHEADER = ${SHELL} /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified_lm/Coin-3.1.3/cfg/missing --run autoheader
AUTOMAKE = ${SHELL} /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified_lm/Coin-3.1.3/cfg/missing --run automake-1.8
AWK = gawk
BUILD_3DS_CAPABILITIES_FALSE = 
BUILD_3DS_CAPABILITIES_TRUE = #
BUILD_HTMLPAGES_FALSE = 
BUILD_HTMLPAGES_TRUE = #
BUILD_JAVA_WRAPPER_FALSE = 
BUILD_JAVA_WRAPPER_TRUE = #
BUILD_LIBRARY_FALSE = #
BUILD_LIBRARY_TRUE = 
BUILD_MANPAGES_FALSE = 
BUILD_MANPAGES_TRUE = #
BUILD_WITH_MSVC = false
BUILD_WITH_MSVC_FALSE = 
BUILD_WITH_MSVC_TRUE = #
BUILD_WITH_SOUND_FALSE = #
BUILD_WITH_SOUND_TRUE = 
BUILD_WITH_SUPERGLU_FALSE = 
BUILD_WITH_SUPERGLU_TRUE = #
BUILD_WITH_THREADS_FALSE = #
BUILD_WITH_THREADS_TRUE = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -W -Wall -Wno-unused -Wno-multichar  -fno-builtin -finline-functions -Wreturn-type -Wchar-subscripts -Wparentheses
COIN_BETA_VERSION = 
COIN_COMPILER = g++
COIN_DOC_HTML = NO
COIN_DOC_MAN = NO
COIN_DSP_DEFS = 
COIN_DSP_INCS = 
COIN_DSP_LIBS = 
COIN_EXTRA_CFLAGS = -g -O2
COIN_EXTRA_CPPFLAGS =  -I${prefix}/include -I${prefix}/include/Inventor/annex -D_REENTRANT
COIN_EXTRA_CXXFLAGS = -g -O2
COIN_EXTRA_LDFLAGS = -L${exec_prefix}/lib
COIN_EXTRA_LIBS = -lCoin -lGL -lXext -lSM -lICE -lX11 -ldl -lpthread
COIN_HACKING_LIBDIRS = 
COIN_LIB_DSP_DEFS = 
COIN_MAJOR_VERSION = 3
COIN_MICRO_VERSION = 3
COIN_MINOR_VERSION = 1
COIN_MSVC_LIBC = 
COIN_SO_VERSION = 60
COIN_TESTSUITE_EXTRA_CPPFLAGS = 
COIN_TESTSUITE_EXTRA_LDFLAGS = 
COIN_VERSION = 3.1.3
CONFIG = default
CPP = gcc -E
CPPFLAGS =  -D_REENTRANT -DCOIN_DEBUG=1 -DCOIN_INTERNAL
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -W -Wall -Wno-unused -Wno-multichar -Woverloaded-virtual  -fno-builtin -finline-functions -Wreturn-type -Wchar-subscripts -Wparentheses
CYGPATH_W = echo
DEB_PACKAGEABLE_FALSE = #
DEB_PACKAGEABLE_TRUE = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSUFFIX = d
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = f77
FFLAGS = -g -O2
GREP = /bin/grep
HACKING_COMPACT_BUILD_FALSE = 
HACKING_COMPACT_BUILD_TRUE = #
HACKING_DYNAMIC_MODULES_FALSE = 
HACKING_DYNAMIC_MODULES_TRUE = #
HAVE_3DS_IMPORT_CAPABILITIES = 0
HAVE_DRAGGERS = 1
HAVE_FONTCONFIG_FALSE = 
HAVE_FONTCONFIG_TRUE = #
HAVE_FREETYPE_FALSE = 
HAVE_FREETYPE_TRUE = #
HAVE_JAVASCRIPT = 1
HAVE_MANIPULATORS = 1
HAVE_NODEKITS = 1
HAVE_SOUND = 1
HAVE_SPIDERMONKEY_VIA_LINKTIME_LINKING_FALSE = 
HAVE_SPIDERMONKEY_VIA_LINKTIME_LINKING_TRUE = #
HAVE_SUPERGLU = 0
HAVE_THREADS = 1
HAVE_THREADSAFE = 0
HAVE_VRML97 = 1
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBEXT = .so
LIBFLAGS = 
LIBOBJS = 

# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 1
LT_CURRENT = 61
LT_REVISION = 3
MACOSX_10_2FF = false
MACOSX_10_2FF_FALSE = 
MACOSX_10_2FF_TRUE = #
MACOSX_10_3FF_FALSE = 
MACOSX_10_3FF_TRUE = #
MACOSX_DEPLOYMENT_TARGET = 
MACOSX_FALSE = 
MACOSX_NAME = 
MACOSX_PACKAGEABLE_FALSE = 
MACOSX_PACKAGEABLE_TRUE = #
MACOSX_TRUE = #
MACOSX_USE_DYNAMIC_LOOKUP_FALSE = 
MACOSX_USE_DYNAMIC_LOOKUP_TRUE = #
MAC_FRAMEWORK = false
MAC_FRAMEWORK_FALSE = 
MAC_FRAMEWORK_NAME = Inventor
MAC_FRAMEWORK_PREFIX = /Library/Frameworks
MAC_FRAMEWORK_TRUE = #
MAC_FRAMEWORK_VERSION = C
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified_lm/Coin-3.1.3/cfg/missing --run makeinfo
NMEDIT = 
OBJEXT = o
PACKAGE = Coin
PACKAGE_BUGREPORT = coin-support@coin3d.org
PACKAGE_NAME = Coin
PACKAGE_STRING = Coin 3.1.3
PACKAGE_TARNAME = coin
PACKAGE_URL = 
PACKAGE_VERSION = 3.1.3
PATH_SEPARATOR = :
RANLIB = ranlib
RFC822_DATE = Wed, 25 Nov 2020 00:12:51 +0800
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SIM_INCLUDE_GLEXT_H = #include <GL/glext.h>
SIM_INCLUDE_GLU_H = #include <GL/glu.h>
SIM_INCLUDE_GL_H = #include <GL/gl.h>
SIM_INCLUDE_WINDOWS_H = /* #include <windows.h> - not needed on system */
STRIP = strip
SUFFIX = 
SUPERGLUPREFIX = Super
USE_SYSTEM_EXPAT_FALSE = 
USE_SYSTEM_EXPAT_TRUE = #
VERSION = 3.1.3
WIN_PACKAGEABLE_FALSE = 
WIN_PACKAGEABLE_TRUE = #
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ac_compiler_gnu = yes
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f77
ac_unique_file = src/misc/SoDB.cpp
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
cmp_avail = Yes
coin_build_dir = /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified-build/coin
coin_configure_date = 20201125
coin_html_dir = /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified-build/coin/html
coin_man_dir = /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified-build/coin/man
coin_src_dir = /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified_lm/Coin-3.1.3
coin_w32_build_dir = /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified-build/coin
coin_w32_src_dir = /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified_lm/Coin-3.1.3
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
frameworkdir = 
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${prefix}/share/doc/coin/html
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified_lm/Coin-3.1.3/cfg/install-sh
ivincludedir = ${prefix}/include
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p -- .
nop = 
oldincludedir = /usr/include
path_tag = 
pdfdir = ${docdir}
prefix = /home/liujian/WorkSpace/EBM_Hand/grasp_generation/graspitmodified-build/coin/install-custom
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sim_ac_doxygen_exe = 
sim_ac_dpkg_buildpackage_exe = /usr/bin/dpkg-buildpackage
sim_ac_makensis_exe = false
sim_ac_packagemaker_app = false
sim_ac_perl_exe = /usr/bin/perl
sim_ac_relative_src_dir = ../../graspitmodified_lm/Coin-3.1.3
sim_ac_relative_src_dir_p = true
sim_ac_simage_configcmd = 
subdirs = 
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
RegularSources = \
	SoGLCacheContextElement.cpp \
	SoGLClipPlaneElement.cpp \
	SoGLColorIndexElement.cpp \
	SoGLCoordinateElement.cpp \
	SoGLDepthBufferElement.cpp \
	SoGLDrawStyleElement.cpp \
	SoGLEnvironmentElement.cpp \
	SoGLLazyElement.cpp \
	SoGLLightIdElement.cpp \
	SoGLLinePatternElement.cpp \
	SoGLLineWidthElement.cpp \
	SoGLModelMatrixElement.cpp \
	SoGLMultiTextureCoordinateElement.cpp \
	SoGLMultiTextureEnabledElement.cpp \
	SoGLMultiTextureMatrixElement.cpp \
	SoGLMultiTextureImageElement.cpp \
	SoGLNormalElement.cpp \
	SoGLPointSizeElement.cpp \
	SoGLPolygonOffsetElement.cpp \
	SoGLProjectionMatrixElement.cpp \
	SoGLRenderPassElement.cpp \
	SoGLShapeHintsElement.cpp \
	SoGLTextureCoordinateElement.cpp \
	SoGLTextureEnabledElement.cpp \
	SoGLTexture3EnabledElement.cpp \
	SoGLTextureImageElement.cpp \
	SoGLTextureMatrixElement.cpp \
	SoGLUpdateAreaElement.cpp \
	SoGLVBOElement.cpp \
	SoGLViewingMatrixElement.cpp \
	SoGLViewportRegionElement.cpp \
	SoGLDisplayList.cpp \
	SoGLVertexAttributeElement.cpp \
	SoResetMatrixElement.cpp

LinkHackSources = \
	all-glelements-cpp.cpp

PublicHeaders = 
PrivateHeaders = \
	SoResetMatrixElement.h

ObsoletedHeaders = 

# **************************************************************************
# This template depends on the following variables having been set up before
# its invokation.
#
# PublicHeaders    - header files that should be installed
# PrivateHeaders   - source files that should be distributed, but not
#                    installed - including source-included source files.
# RegularSources   - source files compiled in this directory
# LinkHackSources  - alternative source files used on -enable-compact compilation
# ObsoletedHeaders - header files that should be removed upon installation

# Everything below is autogenerated from a macro, so don't modify
# within the Makefile.am itself. 19991201 mortene.
DISTCLEANFILES = \
	ii_files/*.ii

CLEANFILES = \
	vc*.pdb

BuildSources = $(RegularSources)
#BuildSources = $(LinkHackSources)
ExtraSources = $(LinkHackSources)
#ExtraSources = $(RegularSources)
#noinst_LIBRARIES = glelements.lst
#lib_LTLIBRARIES = libglelementsLINKHACK.la
noinst_LTLIBRARIES = libglelements.la
DEFAULT_INCLUDES = -I$(top_builddir)/include -I$(top_srcdir)/include $(ExtraIncludeDirs) -I$(top_builddir)/src -I$(top_srcdir)/src
libglelementsincdir = $(includedir)/Inventor/elements

# header installation
#libglelementsincdir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Headers/elements
# hack to change libdir value when installing Mac OS X compiler framework
#libdir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Libraries
libglelementsinc_HEADERS = $(PublicHeaders)
libglelements_la_SOURCES = $(BuildSources)
EXTRA_libglelements_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

libglelementsLINKHACK_la_SOURCES = $(BuildSources)
EXTRA_libglelementsLINKHACK_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

glelements_lst_SOURCES = $(BuildSources)
EXTRA_glelements_lst_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/elements/GL/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/elements/GL/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libglelements.la: $(libglelements_la_OBJECTS) $(libglelements_la_DEPENDENCIES) 
	$(CXXLINK)  $(libglelements_la_LDFLAGS) $(libglelements_la_OBJECTS) $(libglelements_la_LIBADD) $(LIBS)
libglelementsLINKHACK.la: $(libglelementsLINKHACK_la_OBJECTS) $(libglelementsLINKHACK_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libglelementsLINKHACK_la_LDFLAGS) $(libglelementsLINKHACK_la_OBJECTS) $(libglelementsLINKHACK_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/SoGLCacheContextElement.Plo
include ./$(DEPDIR)/SoGLCacheContextElement.Po
include ./$(DEPDIR)/SoGLClipPlaneElement.Plo
include ./$(DEPDIR)/SoGLClipPlaneElement.Po
include ./$(DEPDIR)/SoGLColorIndexElement.Plo
include ./$(DEPDIR)/SoGLColorIndexElement.Po
include ./$(DEPDIR)/SoGLCoordinateElement.Plo
include ./$(DEPDIR)/SoGLCoordinateElement.Po
include ./$(DEPDIR)/SoGLDepthBufferElement.Plo
include ./$(DEPDIR)/SoGLDepthBufferElement.Po
include ./$(DEPDIR)/SoGLDisplayList.Plo
include ./$(DEPDIR)/SoGLDisplayList.Po
include ./$(DEPDIR)/SoGLDrawStyleElement.Plo
include ./$(DEPDIR)/SoGLDrawStyleElement.Po
include ./$(DEPDIR)/SoGLEnvironmentElement.Plo
include ./$(DEPDIR)/SoGLEnvironmentElement.Po
include ./$(DEPDIR)/SoGLLazyElement.Plo
include ./$(DEPDIR)/SoGLLazyElement.Po
include ./$(DEPDIR)/SoGLLightIdElement.Plo
include ./$(DEPDIR)/SoGLLightIdElement.Po
include ./$(DEPDIR)/SoGLLinePatternElement.Plo
include ./$(DEPDIR)/SoGLLinePatternElement.Po
include ./$(DEPDIR)/SoGLLineWidthElement.Plo
include ./$(DEPDIR)/SoGLLineWidthElement.Po
include ./$(DEPDIR)/SoGLModelMatrixElement.Plo
include ./$(DEPDIR)/SoGLModelMatrixElement.Po
include ./$(DEPDIR)/SoGLMultiTextureCoordinateElement.Plo
include ./$(DEPDIR)/SoGLMultiTextureCoordinateElement.Po
include ./$(DEPDIR)/SoGLMultiTextureEnabledElement.Plo
include ./$(DEPDIR)/SoGLMultiTextureEnabledElement.Po
include ./$(DEPDIR)/SoGLMultiTextureImageElement.Plo
include ./$(DEPDIR)/SoGLMultiTextureImageElement.Po
include ./$(DEPDIR)/SoGLMultiTextureMatrixElement.Plo
include ./$(DEPDIR)/SoGLMultiTextureMatrixElement.Po
include ./$(DEPDIR)/SoGLNormalElement.Plo
include ./$(DEPDIR)/SoGLNormalElement.Po
include ./$(DEPDIR)/SoGLPointSizeElement.Plo
include ./$(DEPDIR)/SoGLPointSizeElement.Po
include ./$(DEPDIR)/SoGLPolygonOffsetElement.Plo
include ./$(DEPDIR)/SoGLPolygonOffsetElement.Po
include ./$(DEPDIR)/SoGLProjectionMatrixElement.Plo
include ./$(DEPDIR)/SoGLProjectionMatrixElement.Po
include ./$(DEPDIR)/SoGLRenderPassElement.Plo
include ./$(DEPDIR)/SoGLRenderPassElement.Po
include ./$(DEPDIR)/SoGLShapeHintsElement.Plo
include ./$(DEPDIR)/SoGLShapeHintsElement.Po
include ./$(DEPDIR)/SoGLTexture3EnabledElement.Plo
include ./$(DEPDIR)/SoGLTexture3EnabledElement.Po
include ./$(DEPDIR)/SoGLTextureCoordinateElement.Plo
include ./$(DEPDIR)/SoGLTextureCoordinateElement.Po
include ./$(DEPDIR)/SoGLTextureEnabledElement.Plo
include ./$(DEPDIR)/SoGLTextureEnabledElement.Po
include ./$(DEPDIR)/SoGLTextureImageElement.Plo
include ./$(DEPDIR)/SoGLTextureImageElement.Po
include ./$(DEPDIR)/SoGLTextureMatrixElement.Plo
include ./$(DEPDIR)/SoGLTextureMatrixElement.Po
include ./$(DEPDIR)/SoGLUpdateAreaElement.Plo
include ./$(DEPDIR)/SoGLUpdateAreaElement.Po
include ./$(DEPDIR)/SoGLVBOElement.Plo
include ./$(DEPDIR)/SoGLVBOElement.Po
include ./$(DEPDIR)/SoGLVertexAttributeElement.Plo
include ./$(DEPDIR)/SoGLVertexAttributeElement.Po
include ./$(DEPDIR)/SoGLViewingMatrixElement.Plo
include ./$(DEPDIR)/SoGLViewingMatrixElement.Po
include ./$(DEPDIR)/SoGLViewportRegionElement.Plo
include ./$(DEPDIR)/SoGLViewportRegionElement.Po
include ./$(DEPDIR)/SoResetMatrixElement.Plo
include ./$(DEPDIR)/SoResetMatrixElement.Po
include ./$(DEPDIR)/all-glelements-cpp.Plo
include ./$(DEPDIR)/all-glelements-cpp.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

uninstall-libglelementsincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libglelementsinc_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(libglelementsincdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libglelementsincdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libglelementsincdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLIBRARIES clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libglelementsincHEADERS

install-exec-am: install-exec-local install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libglelementsincHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-exec-local install-info install-info-am \
	install-libLTLIBRARIES install-libglelementsincHEADERS \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libglelementsincHEADERS


# this rule causes a make warning, so we remove it when it is not in use
glelements.lst: Makefile $(glelements_lst_OBJECTS)
	@echo "Linking glelements.lst..."; \
	rm -f $@; touch $@; \
	for i in $(glelements_lst_OBJECTS); do echo $$i >>$@; done

install-libglelementsincHEADERS: $(libglelementsinc_HEADERS)
	@$(NORMAL_INSTALL)
	@if test x"$(libglelementsinc_HEADERS)" = x""; then :; else \
	  echo " $(mkinstalldirs) $(DESTDIR)$(libglelementsincdir)"; \
	  $(mkinstalldirs) $(DESTDIR)$(libglelementsincdir); \
	fi
	@list='$(libglelementsinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  src="$$d$$p"; dst="$(DESTDIR)$(libglelementsincdir)/$$f"; \
	  if cmp -s "$$src" "$$dst"; then :; else \
	    echo " $(INSTALL_HEADER) $$src $$dst"; \
	    $(INSTALL_HEADER) "$$src" "$$dst" || exit 1; \
	  fi \
	done
	@list='$(ObsoletedHeaders)'; for f in $$list; do \
	  file="$(DESTDIR)$(libglelementsincdir)/$$f"; \
	  if test -x "$$file"; then \
	    echo " rm -f $$file"; \
	    rm -f "$$file"; \
	  fi \
	done; \
	:

# When using --enable-hacking, the user tends to manually replace some 
# of the installed libraries by symlinks back to the build directory. 
# But Mac OS X's install program refuses to overwrite symlinks => we 
# have to explicitly remove existing symlinks before installation.
#install-exec-local:
#	@for file in $(DESTDIR)$(libdir)/libglelementsLINKHACK*.dylib; do \
#	  if test -L "$$file"; then \
#	    rm -f "$$file"; \
#	  fi \
#	done; 
install-exec-local:

install-symlinks:
	@echo "Creating symlink to libglelementsLINKHACK*.so*"; \
        for dir in $(SUBDIRS) ; do \
          (cd $$dir; $(MAKE) install-symlinks;) \
        done ; \
        here=`pwd`; \
	(cd $(DESTDIR)$(libdir); \
	for file in libglelementsLINKHACK*.so*; do \
	  ln -sf "$$here/.libs/$$file" "$$file"; \
	done; \
        cd -; )
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
